<krpano version="1.19">

    <include url="vtourskin.xml"/>
    <!--
     customize skin settings: maps, gyro, thumbnails, tooltips, layout, design, ...
    -->
    <skin_settings maps="false" maps_type="bing" maps_bing_api_key="" maps_zoombuttons="false" gyro="true" littleplanetintro="false" title="true" thumbs="true" thumbs_width="120" thumbs_height="80" thumbs_padding="10" thumbs_crop="0|40|240|160" thumbs_opened="false" thumbs_text="false" thumbs_dragging="true" thumbs_onhoverscrolling="false" thumbs_scrollbuttons="false" thumbs_scrollindicator="false" thumbs_loop="false" tooltips_buttons="false" tooltips_thumbs="false" tooltips_hotspots="false" tooltips_mapspots="false" deeplinking="false" loadscene_flags="MERGE" loadscene_blend="OPENBLEND(0.5, 0.0, 0.75, 0.05, linear)" loadscene_blend_prev="SLIDEBLEND(0.5, 180, 0.75, linear)" loadscene_blend_next="SLIDEBLEND(0.5, 0, 0.75, linear)" loadingtext="loading..." layout_width="100%" layout_maxwidth.normal="900" layout_maxwidth.mobile="" controlbar_width.normal="-44" controlbar_width.mobile="100%" controlbar_height.normal="38" controlbar_height.mobile="34" controlbar_offset.normal="22" controlbar_offset.mobile="0" controlbar_offset_closed="-40" controlbar_overlap.normal="7" controlbar_overlap.mobile="2" design_skin_images="%SWFPATH%/img/vtourskin.png" design_bgcolor="0x000000" design_bgalpha="0.5" design_bgborder="0 0xFFFFFF 1.0" design_bgroundedge.normal="9" design_bgroundedge.mobile="1" design_bgshadow="0 0 9 0xFFFFFF 0.5" design_thumbborder_bgborder="4 0xFFFFFF 1.0" design_thumbborder_padding="2" design_thumbborder_bgroundedge="5" design_text_css="color:#FFFFFF; font-family:Arial; font-weight:bold;" design_text_shadow="1"/>
    <!--

            For an alternative skin design either change the <skin_settings> values
            from above or optionally include one of the predefined designs from below.
            Either by removing the 'xml-if-check' from the particular <include> element
            or by adding e.g. initvar:{design:'flat_light'} to the embedpano() call in
            the html file:

    -->
<!--
    <include url="skin/vtourskin_design_glass.xml" if="design === 'glass'"/>
    <include url="skin/vtourskin_design_flat.xml" if="design === 'flat'"/>
    <include url="skin/vtourskin_design_flat_light.xml" if="design === 'flat_light'"/>
    <include url="skin/vtourskin_design_ultra_light.xml" if="design === 'ultra_light'"/>
    <include url="skin/vtourskin_design_117.xml" if="design === '117'"/>
-->





    <action name="startup" autorun="onstart">
        if(startscene === null OR !scene[get(startscene)], copy(startscene,scene[0].name); ); loadscene(get(startscene), null, MERGE); if(startactions !== null, startactions() );
    </action>


    <view hlookat="0" vlookat="0" fovtype="MFOV" fov="120" fovmin="50" fovmax="120" limitview="auto" />

    <autorotate enabled="true" waittime="3.0" speed="10.0" horizon="0.0"/>
    <events name="onautorotateevents" keep="true" onautorotateoneround="nextscene()"/>
    <action name="nextscene">
        autorotate.stop();
        wait(1);
        set(ns, get(scene[get(xml.scene)].index));
        set(maxs, get(scene.count));
        add(ns, 1);
        if (ns == maxs, set(ns, 0));
        loadscene(get(scene[get(ns)].name), null, MERGE | KEEPMOVING, BLEND(1.5));
        autorotate.start();
    </action>


    <events name="lp_events_" keep="true" onxmlcomplete="set(events[lp_events_].onxmlcomplete,null);
        if(device.webgl OR device.flash,
    skin_setup_littleplanetintro();
    ); " />
    <action name="skin_setup_littleplanetintro">
        copy(lp_scene, xml.scene);
        copy(lp_hlookat, view.hlookat);
        copy(lp_vlookat, view.vlookat);
        copy(lp_fov, view.fov);
        copy(lp_fovmax, view.fovmax);
        copy(lp_limitview, view.limitview);
        set(view.fovmax, 170);
        set(view.limitview, lookto);
        set(view.vlookatmin, 90);
        set(view.vlookatmax, 90);
        set_hotspot_visible(false);
        set(layer[skin_layer].visible, false);
        set(layer[skin_layer].alpha, 0);
        set(layer[skin_control_bar].visible, false);
        set(layer[skin_control_bar].alpha, 0);
        set(layer[skin_splitter_bottom].visible, false);
        set(layer[skin_splitter_bottom].alpha, 0);
        lookat(calc(lp_hlookat - 180), 90, 150, 1, 0, 0);
        set(events[lp_events].onloadcomplete,
            delayedcall(2.5,
                if (lp_scene === xml.scene,
                    set(control.usercontrol, off); copy(view.limitview, lp_limitview); set(view.vlookatmin, null); set(view.vlookatmax, null); tween(view.hlookat | view.vlookat | view.fov | view.distortion, calc('' + lp_hlookat + '|' + lp_vlookat + '|' + lp_fov + '|' + 0.0),
                        3.0, easeOutQuad,
                        set(control.usercontrol, all); tween(view.fovmax, get(lp_fovmax));
                    ); set_hotspot_visible(true); set(layer[skin_layer].visible, true); tween(layer[skin_layer].alpha, 1, 1); set(layer[skin_control_bar].visible, true); tween(layer[skin_control_bar].alpha, 1, 1); set(layer[skin_splitter_bottom].visible, true); tween(layer[skin_splitter_bottom].alpha, 1, 1);
                );
            );
        );

    </action>
    <events name="lp_events_" keep="true" onxmlcomplete="set(events[lp_events_].onxmlcomplete,null);
        if(device.webgl OR device.flash,
    skin_setup_littleplanetintro();
    ); " />
    <action name="skin_setup_littleplanetintro">
        copy(lp_scene, xml.scene);
        copy(lp_hlookat, view.hlookat);
        copy(lp_vlookat, view.vlookat);
        copy(lp_fov, view.fov);
        copy(lp_fovmax, view.fovmax);
        copy(lp_limitview, view.limitview);
        set(view.fovmax, 170);
        set(view.limitview, lookto);
        set(view.vlookatmin, 90);
        set(view.vlookatmax, 90);
        set_hotspot_visible(false);
        set(layer[skin_layer].visible, false);
        set(layer[skin_layer].alpha, 0);
        set(layer[skin_control_bar].visible, false);
        set(layer[skin_control_bar].alpha, 0);
        set(layer[skin_splitter_bottom].visible, false);
        set(layer[skin_splitter_bottom].alpha, 0);
        lookat(calc(lp_hlookat - 180), 90, 150, 1, 0, 0);
        set(events[lp_events].onloadcomplete, delayedcall(0.5,
            if (lp_scene === xml.scene, set(control.usercontrol, off); copy(view.limitview, lp_limitview); set(view.vlookatmin, null); set(view.vlookatmax, null); tween(view.hlookat | view.vlookat | view.fov | view.distortion, calc('' + lp_hlookat + '|' + lp_vlookat + '|' + lp_fov + '|' + 0.0), 3.0, easeOutQuad, set(control.usercontrol, all); tween(view.fovmax, get(lp_fovmax));); set_hotspot_visible(true); set(layer[skin_layer].visible, true); tween(layer[skin_layer].alpha, 1, 1); set(layer[skin_control_bar].visible, true); tween(layer[skin_control_bar].alpha, 1, 1); set(layer[skin_splitter_bottom].visible, true); tween(layer[skin_splitter_bottom].alpha, 1, 1););););

    </action>
    <action name="set_hotspot_visible">
        for (set(i, 0), i LT hotspot.count, inc(i),
        if ( %1 == false,
            if (hotspot[get(i)].visible == true, set(hotspot[get(i)].mark, true); set(hotspot[get(i)].visible, % 1););,
            if (hotspot[get(i)].mark == true OR hotspot[get(i)].mark2 == true, set(hotspot[get(i)].visible, % 1););););
    </action>


    <contextmenu fullscreen="true" versioninfo="true">
        <item name="kr" caption="YihLeego" onclick="openurl('http://yihleego.com')" />
        <item name="fs" caption="FULLSCREEN" />
        <item name="nv" caption="正常视角" onclick="cm_normal_view();" showif="view.vlookatrange == 180" separator="true" />
        <item name="fv" caption="鱼眼视角" onclick="cm_fisheye_view();" showif="view.vlookatrange == 180" devices="flash|webgl" />
        <item name="sv" caption="立体视角" onclick="cm_stereographic_view();" showif="view.vlookatrange == 180" devices="flash|webgl" />
        <item name="av" caption="建筑视角" onclick="cm_architectural_view();" showif="view.vlookatrange == 180" />
        <item name="pv" caption="帕尼尼视角" onclick="cm_pannini_view();" showif="view.vlookatrange == 180" devices="flash|webgl" />
        <item name="lp" caption="小行星视角" onclick="cm_littleplanet_view();" showif="view.vlookatrange == 180" devices="flash|webgl" />
        <item name="logo" caption="[img src='https://avatars0.githubusercontent.com/u/21337386' style='width:32px; height:32px; margin:0 auto;'/]" separator="true" onclick="openurl('http://github.com')" devices="html5" />
    </contextmenu>-->


    <action name="cm_normal_view">
        skin_view_look_straight();
        tween(view.architectural, 0.0, distance(1.0,0.5));
        tween(view.pannini,       0.0, distance(1.0,0.5));
        tween(view.distortion,    0.0, distance(1.0,0.5));
    </action>

    <action name="cm_fisheye_view">
        skin_view_look_straight();
        tween(view.architectural, 0.0,  distance(1.0,0.5));
        tween(view.pannini,       0.0,  distance(1.0,0.5));
        tween(view.distortion,    0.35, distance(1.0,0.5));
    </action>

    <action name="cm_stereographic_view">
        skin_view_look_straight();
        tween(view.architectural, 0.0, distance(1.0,0.5));
        tween(view.pannini,       0.0, distance(1.0,0.5));
        tween(view.distortion,    1.0, distance(1.0,0.8));
    </action>

    <action name="cm_architectural_view">
        skin_view_look_straight();
        tween(view.architectural, 1.0, distance(1.0,0.5));
        tween(view.pannini,       0.0, distance(1.0,0.5));
        tween(view.distortion,    0.0, distance(1.0,0.5));
    </action>

    <action name="cm_pannini_view">
        skin_view_look_straight();
        tween(view.architectural, 0.0, distance(1.0,0.5));
        tween(view.pannini,       1.0, distance(1.0,0.8));
        if(view.distortion LT 0.1,
        tween(view.distortion, 1.0, distance(1.0,0.8));
        );
    </action>

    <action name="cm_littleplanet_view">
        tween(view.architectural, 0.0, distance(1.0,0.5));
        tween(view.pannini,       0.0, distance(1.0,0.5));
        tween(view.distortion,    1.0, distance(1.0,0.8));
        tween(view.fov,           150, distance(150,0.8));
        tween(view.vlookat,        90, distance(100,0.8));
        add(new_hlookat, view.hlookat, 123.0);
        tween(view.hlookat, get(new_hlookat), distance(100,0.8));
        skin_deeplinking_update_url(1.0);
    </action>

</krpano>
